// <auto-generated />
using System;
using CARS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CARS.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200309103149_Init2")]
    partial class Init2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CARS.Models.Step", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Part")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TechnicalControlId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TechnicalControlId");

                    b.ToTable("Steps");
                });

            modelBuilder.Entity("CARS.Models.TechnicalControl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("TechnicalControls");
                });

            modelBuilder.Entity("CARS.Models.Vehicule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehiculeTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehiculeTypeId");

                    b.ToTable("Vehicules");
                });

            modelBuilder.Entity("CARS.Models.VehiculeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StepId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StepId");

                    b.ToTable("VehiculeType");
                });

            modelBuilder.Entity("CARS.Models.Step", b =>
                {
                    b.HasOne("CARS.Models.TechnicalControl", null)
                        .WithMany("Steps")
                        .HasForeignKey("TechnicalControlId");
                });

            modelBuilder.Entity("CARS.Models.TechnicalControl", b =>
                {
                    b.HasOne("CARS.Models.Vehicule", "Vehicule")
                        .WithMany()
                        .HasForeignKey("IdVehicule")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CARS.Models.Vehicule", b =>
                {
                    b.HasOne("CARS.Models.VehiculeType", "VehiculeType")
                        .WithMany()
                        .HasForeignKey("VehiculeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CARS.Models.VehiculeType", b =>
                {
                    b.HasOne("CARS.Models.Step", null)
                        .WithMany("VehiculeType")
                        .HasForeignKey("StepId");
                });
#pragma warning restore 612, 618
        }
    }
}
